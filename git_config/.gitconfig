[diff]
  tool = vimdiff
[core]
  compression = 0
  editor = vim
  excludesfile = ~/vi2.config/git_config/gitignore

[merge]
  tool = vimdiff

[init]

[alias]
  #List the changed files
  cf = "!git status --porcelain | awk '{print $2}'"
  stat = status
  #Fetch all submodules
  mu = "git pull && git submodule init && git submodule update"
  ga = add
  am = commit --amend
  gte = checkout --theirs
  gto = checkout --ours
  del = "git status | grep 'deleted' | cut -d ':' -f2 | xargs git rm"
  tail = log --oneline --decorate
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  #Git commited files with username
  lf = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  #Git log with dates eg git lds -4
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  #List all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  dl = "!git ll -1"
  fl = log -u
  #rebase git interactively
  rb =  rebase -i
  #Reset branches
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

  cp = cherry-pick
  st = status -s
  ci = commit
  co = checkout
  br = branch 
  diff = diff --word-diff
  dc = diff --cached

  #Merge diff
  os = "!f() { git co --ours $@ && git add $@; }; f"
  ts = "!f() { git co --theirs $@ && git add $@; }; f"

[gitflow "prefix"]
  feature = feature-
  release = release-
  hotfix = hotfix-
  support = support-
  versiontag = v

# vim: set ts=2 sw=2 sts=2 tw=120 et nospell :
