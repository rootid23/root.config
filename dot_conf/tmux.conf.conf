# useful shortcut prefix q : pane numbering

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1
#set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g renumber-windows on

#turn-off mouse
setw -g mode-mouse off

# unbind default prefix and set it to Ctrl+n
unbind C-b
set -g prefix C-n
bind C-n send-prefix

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

#With -n require no prefix 	
#bind-key -n C-r source-file ~/.tmux.conf

# split windows
bind | split-window -h 
bind - split-window -v 

# quickly open a new window
bind n new-window

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10


#visual style
set -g status-fg white
set -g status-bg black

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
 	
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

set -g message-fg white
set -g message-bg black
set -g message-attr bright

##set the status 

set -g status-left-length 40
 	
###set -g status-left "S#[fg=green]#S W#[fg=yellow]#I P#[fg=cyan]#P H#[fg=green]#h"
set -g status-left "#[fg=green]#S"
set -g status-right "#[fg=cyan]%d %b %R"
set -g status-justify centre

set -g status-interval 60

# make delay shorter
set -sg escape-time 0


#get the notification
setw -g monitor-activity on
set -g visual-activity on

#switch-session
bind -r ( switch-client -p
bind -r ) switch-client -n


# for nested tmux sessions
bind-key a send-prefix

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
